- name: disable default nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs:20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs and mysql
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - nodejs
    - mysql

- name: create expense user
  ansible.builtin.user:
    name: expense

- name: importing tasks from common
  tags: 
    - deployment
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req

- name: install dependencies
  tags: 
    - deployment
  ansible.builtin.command: npm install
  args: #here it will change directory and then installs dependencies
    chdir: /app

- name: Copy backend service #usually ansible.builtin.copy works only for files without variables(but in service file we have variables so use ansible.builtin.template)
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: ansible to install pymysql
  ansible.builtin.pip:
    name:
    - PyMySQL
    - cryptography
    executable: pip3.9

- name: import mysql data
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_host: "{{ login_host }}"
    state: import
    name: all
    target: /app/schema/backend.sql

- name: Daemon reload
  tags: 
    - deployment
  ansible.builtin.systemd_service:
    daemon_reload: true
    state: restarted
    name: backend
